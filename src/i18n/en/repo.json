{
	"repo": {
		"auto_init": "Initialize this repository with selected files and template",
		"bare_message": "This repository does not have any content yet.",
		"branch": "Branch",
		"branches": {
			"active_branches": "Active Branches",
			"all": "All Branches",
			"branches_name": "Branches",
			"change_default_branch": "Change Default Branch",
			"overview": "Overview",
			"stale_branches": "Stale Branches",
			"updated_by": "Updated %[1]s by %[2]s"
		},
		"clone_helper": "Need help cloning? Visit <a target=\"_blank\" href=\"%s\">Help</a>!",
		"clone_this_repo": "Clone this repository",
		"commits": {
			"author": "Author",
			"commit_history": "Commit History",
			"commits": "Commits",
			"commits_name": "Commits",
			"date": "Date",
			"find": "Find",
			"message": "Message",
			"newer": "Newer",
			"older": "Older",
			"search": "Search commits"
		},
		"copied": "Copied OK",
		"copy_link": "Copy",
		"copy_link_error": "Press ?-C or Ctrl-C to copy",
		"copy_link_success": "Copied!",
		"create_new_repo_command": "Create a new repository on the command line",
		"create_repo": "Create Repository",
		"default_branch": "Default Branch",
		"diff": {
			"bin": "BIN",
			"browse_source": "Browse Source",
			"commit": "commit",
			"data_not_available": "Diff Data Not Available.",
			"file_suppressed": "File diff suppressed because it is too large",
			"parent": "parent",
			"show_diff_stats": "Show Diff Stats",
			"show_split_view": "Split View",
			"show_unified_view": "Unified View",
			"stats_desc": "<strong> %d changed files</strong> with <strong>%d additions</strong> and <strong>%d deletions</strong>",
			"too_many_files": "Some files were not shown because too many files changed in this diff",
			"view_file": "View File"
		},
		"editor": {
			"add": "Add '%s'",
			"add_subdir": "Add subdirectory...",
			"add_tmpl": "Add '%s/<filename>'",
			"branch_already_exists": "Branch '%s' already exists in this repository.",
			"cancel": "Cancel",
			"cancel_lower": "cancel",
			"cannot_edit_non_text_files": "Cannot edit non-text files",
			"commit_changes": "Commit Changes",
			"commit_directly_to_this_branch": "Commit directly to the <strong class=\"branch-name\">%s</strong> branch.",
			"commit_message_desc": "Add an optional extended description...",
			"create_new_branch": "Create a <strong>new branch</strong> for this commit and start a pull request.",
			"delete": "Delete '%s'",
			"delete_this_file": "Delete this file",
			"directory_is_a_file": "Entry '%s' in the parent path is a file not a directory in this repository.",
			"edit_file": "Edit file",
			"edit_this_file": "Edit this file",
			"fail_to_update_file": "Failed to update/create file '%s' with error: %v",
			"file_already_exists": "A file with name '%s' already exists in this repository.",
			"file_changed_while_editing": "File content has been changed since you started editing. <a target=\"_blank\" href=\"%s\">Click here</a> to see what have been changed or <strong>press commit again</strong> to overwrite those changes.",
			"file_delete_success": "File '%s' has been deleted successfully!",
			"file_editing_no_longer_exists": "The file '%s' you are editing no longer exists in the repository.",
			"file_is_a_symlink": "The file '%s' is a symlink that cannot be modified from the web editor.",
			"filename_cannot_be_empty": "Filename cannot be empty.",
			"filename_help": "To add directory, just type it and press /. To remove a directory, go to the beginning of the field and press backspace.",
			"filename_is_a_directory": "The filename '%s' is an existing directory in this repository.",
			"fork_before_edit": "You must fork this repository before editing the file",
			"must_be_on_a_branch": "You must be on a branch to make or propose changes to this file",
			"must_have_write_access": "You must have write access to make or propose changes to this file",
			"name_your_file": "Name your file...",
			"new_branch_name_desc": "New branch name...",
			"new_file": "New file",
			"no_changes_to_show": "There are no changes to show.",
			"or": "or",
			"preview_changes": "Preview Changes",
			"unable_to_upload_files": "Failed to upload files to '%s' with error: %v",
			"update": "Update '%s'",
			"upload_file": "Upload file",
			"upload_files_to_dir": "Upload files to '%s'"
		},
		"file_history": "History",
		"file_permalink": "Permalink",
		"file_raw": "Raw",
		"file_too_large": "This file is too large to be shown",
		"file_view_raw": "View Raw",
		"files": "Files",
		"filter_branch_and_tag": "Filter branch or tag",
		"fork": "Fork",
		"fork_from": "Fork From",
		"fork_repo": "Fork Repository",
		"fork_visiblity_helper": "You cannot alter the visibility of a forked repository.",
		"forked_from": "forked from",
		"forks": "Forks",
		"form": {
			"name_pattern_not_allowed": "Repository name pattern '%s' is not allowed.",
			"name_reserved": "Repository name '%s' is reserved.",
			"reach_limit_of_creation": "The owner has reached maximum creation limit of %d repositories."
		},
		"git_branches": "Branches",
		"issues": {
			"attachment": {
				"download": "Click to download \"%s\"",
				"open_tab": "Click to see \"%s\" in a new tab"
			},
			"cancel": "Cancel",
			"close_comment_issue": "Comment and close",
			"close_issue": "Close",
			"close_tab": "%d Closed",
			"closed_at": "closed <a id=\"%[1]s\" href=\"#%[1]s\">%[2]s</a>",
			"closed_title": "Closed",
			"collaborator": "Collaborator",
			"commented_at": "commented <a href=\"#%s\">%s</a>",
			"commit_ref_at": "referenced this issue from a commit <a id=\"%[1]s\" href=\"#%[1]s\">%[2]s</a>",
			"create": "Create Issue",
			"create_comment": "Comment",
			"create_label": "Create Label",
			"delete_comment_confirm": "Are you sure you want to delete this comment?",
			"edit": "Edit",
			"filter_assginee_no_select": "No selected Assignee",
			"filter_assignee": "Assignee",
			"filter_label": "Label",
			"filter_label_no_select": "No selected label",
			"filter_milestone": "Milestone",
			"filter_milestone_no_select": "No selected milestone",
			"filter_sort": {
				"filter_sort_name": "Sort",
				"latest": "Newest",
				"leastcomment": "Least commented",
				"leastupdate": "Least recently updated",
				"mostcomment": "Most commented",
				"oldest": "Oldest",
				"recentupdate": "Recently updated"
			},
			"filter_type": {
				"all_issues": "All issues",
				"assigned_to_you": "Assigned to you",
				"created_by_you": "Created by you",
				"filter_type_name": "Type",
				"mentioning_you": "Mentioning you"
			},
			"issues_name": "Issues",
			"label_color": "Label color",
			"label_count": "%d labels",
			"label_delete": "Delete",
			"label_deletion": "Label Deletion",
			"label_deletion_desc": "Deleting this label will remove its information in all related issues. Do you want to continue?",
			"label_deletion_success": "Label has been deleted successfully!",
			"label_edit": "Edit",
			"label_modify": "Label Modification",
			"label_open_issues": "%d open issues",
			"label_templates": {
				"fail_to_load_file": "Failed to load label template file '%s': %v",
				"helper": "Select a label set",
				"info": "There aren't any labels yet. You can click on the \"New Label\" button above to create one or use a predefined set below.",
				"title": "Load a predefined set of labels",
				"use": "Use this label set"
			},
			"label_title": "Label name",
			"new": {
				"assignee": "Assignee",
				"clear_assignee": "Clear assignee",
				"clear_labels": "Clear labels",
				"clear_milestone": "Clear milestone",
				"closed_milestone": "Closed Milestones",
				"labels": "Labels",
				"milestone": "Milestone",
				"new_name": "New Issue",
				"no_assignee": "No assignee",
				"no_label": "No Label",
				"no_milestone": "No Milestone",
				"open_milestone": "Open Milestones"
			},
			"new_label": "New Label",
			"new_label_placeholder": "Label name...",
			"next": "Next",
			"no_content": "There is no content yet.",
			"num_comments": "%d comments",
			"num_participants": "%d Participants",
			"open_tab": "%d Open",
			"open_title": "Open",
			"opened_by": "opened %[1]s by <a href=\"%[2]s\">%[3]s</a>",
			"opened_by_fake": "opened %[1]s by %[2]s",
			"owner": "Owner",
			"poster": "Poster",
			"previous": "Previous",
			"reopen_comment_issue": "Comment and reopen",
			"reopen_issue": "Reopen",
			"reopened_at": "reopened <a id=\"%[1]s\" href=\"#%[1]s\">%[2]s</a>",
			"save": "Save",
			"sign_in_require_desc": "<a href=\"%s\">Sign in</a> to join this conversation."
		},
		"labels": "Labels",
		"license": "License",
		"license_helper": "Select a license file",
		"migrate": {
			"clone_address": "Clone Address",
			"clone_address_desc": "This can be a HTTP/HTTPS/GIT URL.",
			"clone_address_desc_import_local": "You're also allowed to migrate a repository by local server path.",
			"failed": "Migration failed: %v",
			"invalid_local_path": "Invalid local path, it does not exist or not a directory.",
			"permission_denied": "You are not allowed to import local repositories."
		},
		"migrate_repo": "Migrate Repository",
		"migrate_type": "Migration Type",
		"migrate_type_helper": "This repository will be a <span class=\"text blue\">mirror</span>",
		"milestones": {
			"cancel": "Cancel",
			"clear": "Clear",
			"close": "Close",
			"close_tab": "%d Closed",
			"closed": "Closed %s",
			"create": "Create Milestone",
			"create_success": "Milestone '%s' has been created successfully!",
			"deletion": "Milestone Deletion",
			"deletion_desc": "Deleting this milestone will remove its information in all related issues. Do you want to continue?",
			"deletion_success": "Milestone has been deleted successfully!",
			"desc": "Description",
			"due_date": "Due Date (optional)",
			"edit": "Edit Milestone",
			"edit_subheader": "Use a better description for milestones so people won't be confused.",
			"edit_success": "Changes of milestone '%s' has been saved successfully!",
			"invalid_due_date_format": "Due date format is invalid, must be 'yyyy-mm-dd'.",
			"milestones_name": "Milestones",
			"modify": "Modify Milestone",
			"new": "New Milestone",
			"new_subheader": "Create milestones to organize your issues.",
			"no_due_date": "No due date",
			"open": "Open",
			"open_tab": "%d Open",
			"title": "Title"
		},
		"mirror_address": "Mirror Address",
		"mirror_address_desc": "Please include necessary user credentials in the address.",
		"mirror_from": "mirror of",
		"mirror_interval": "Mirror Interval (hour)",
		"mirror_last_synced": "Last Synced",
		"mirror_prune": "Prune",
		"mirror_prune_desc": "Remove any remote-tracking references that no longer exist on the remote",
		"need_auth": "Need Authorization",
		"no_desc": "No Description",
		"owner": "Owner",
		"pulls": {
			"can_auto_merge_desc": "This pull request can be merged automatically.",
			"cannot_auto_merge_desc": "This pull request can't be merged automatically because there are conflicts.",
			"cannot_auto_merge_helper": "Please merge manually in order to resolve the conflicts.",
			"compare_base": "base",
			"compare_changes": "Compare Changes",
			"compare_changes_desc": "Compare two branches and make a pull request for changes.",
			"compare_compare": "compare",
			"create": "Create Pull Request",
			"data_broken": "Data of this pull request has been broken due to deletion of fork information.",
			"delete_branch": "Delete Branch",
			"delete_branch_has_new_commits": "Branch cannot be deleted because it has new commits after mergence.",
			"filter_branch": "Filter branch",
			"has_merged": "This pull request has been merged successfully!",
			"has_pull_request": "There is already a pull request between these two targets: <a href=\"%[1]s/pulls/%[3]d\">%[2]s#%[3]d</a>",
			"is_checking": "The conflict checking is still in progress, please refresh page in few moments.",
			"merge_pull_request": "Merge Pull Request",
			"merged": "Merged",
			"merged_title_desc": "merged %[1]d commits from <code>%[2]s</code> into <code>%[3]s</code> %[4]s",
			"new": "New Pull Request",
			"no_results": "No results found.",
			"nothing_merge_base": "There is nothing to compare because two branches have completely different history.",
			"nothing_to_compare": "There is nothing to compare because base and head branches are even.",
			"open_unmerged_pull_exists": "You can't perform reopen operation because there is already an open pull request (#%d) from same repository with same merge information and is waiting for merging.",
			"pulls_name": "Pull Requests",
			"reopen_to_merge": "Please reopen this pull request to perform merge operation.",
			"tab_commits": "Commits",
			"tab_conversation": "Conversation",
			"tab_files": "Files changed",
			"title_desc": "wants to merge %[1]d commits from <code>%[2]s</code> into <code>%[3]s</code>"
		},
		"push_exist_repo": "Push an existing repository from the command line",
		"quick_guide": "Quick Guide",
		"readme": "Readme",
		"readme_helper": "Select a readme template",
		"release": {
			"ahead": "<strong>%d</strong> commits to %s since this release",
			"cancel": "Cancel",
			"content": "Content",
			"delete_release": "Delete This Release",
			"deletion": "Release Deletion",
			"deletion_desc": "Deleting this release will delete the corresponding Git tag. Do you want to continue?",
			"deletion_success": "Release has been deleted successfully!",
			"downloads": "Downloads",
			"draft": "Draft",
			"edit": "edit",
			"edit_release": "Edit Release",
			"edit_subheader": "Detailed change log can help users understand what has been improved.",
			"loading": "Loading...",
			"new_release": "New Release",
			"new_subheader": "Publish releases to iterate product.",
			"prerelease": "Pre-Release",
			"prerelease_desc": "This is a pre-release",
			"prerelease_helper": "We'll point out that this release is not production-ready.",
			"preview": "Preview",
			"publish": "Publish Release",
			"releases": "Releases",
			"save_draft": "Save Draft",
			"source_code": "Source Code",
			"tag_helper": "Choose an existing tag, or create a new tag on publish.",
			"tag_name": "Tag name",
			"tag_name_already_exist": "Release with this tag name already exists.",
			"tag_name_invalid": "Tag name is not valid.",
			"target": "Target",
			"title": "Title",
			"write": "Write"
		},
		"releases": "Releases",
		"repo_desc": "Description",
		"repo_gitignore_helper": "Select .gitignore templates",
		"repo_lang": "Language",
		"repo_name": "Repository Name",
		"repo_name_helper": "A good repository name is usually composed of short, memorable and unique keywords.",
		"settings": {
			"active": "Active",
			"active_helper": "Details regarding the event which triggered the hook will be delivered as well.",
			"add_collaborator": "Add New Collaborator",
			"add_collaborator_success": "New collaborator has been added.",
			"add_deploy_key": "Add Deploy Key",
			"add_discord_hook_desc": "Add <a href=\"%s\">Discord</a> integration to your repository.",
			"add_hook_success": "New webhook has been added.",
			"add_key_success": "New deploy key '%s' has been added successfully!",
			"add_service": "Add Service",
			"add_slack_hook_desc": "Add <a href=\"%s\">Slack</a> integration to your repository.",
			"add_webhook": "Add Webhook",
			"add_webhook_desc": "Gogs will send a <code>POST</code> request to the URL you specify, along with details regarding the event that occurred. You can also specify what kind of data format you'd like to get upon triggering the hook (JSON, x-www-form-urlencoded, XML, etc). More information can be found in our <a target=\"_blank\" href=\"%s\">Webhooks Guide</a>.",
			"advanced_settings": "Advanced Settings",
			"allow_public_issues_desc": "Allow public access to issues when repository is private",
			"allow_public_wiki_desc": "Allow public access to wiki when repository is private",
			"basic_settings": "Basic Settings",
			"branch_protection": "Branch Protection",
			"branch_protection_desc": "Please choose protect options for branch <b>%s</b>.",
			"branches": "Branches",
			"branches_bare": "You cannot manage branches for bare repository. Please push some content first.",
			"cannot_fork_to_same_owner": "You cannot fork a repository to its original owner.",
			"change_reponame_prompt": "This change will affect how links relate to the repository.",
			"choose_a_branch": "Choose a branch...",
			"collaboration": {
				"admin": "Admin",
				"collaboration_name": "Collaboration",
				"read": "Read",
				"undefined": "Undefined",
				"write": "Write"
			},
			"collaborator_deletion": "Collaborator Deletion",
			"collaborator_deletion_desc": "This user will no longer have collaboration access to this repository after deletion. Do you want to continue?",
			"confirm_delete": "Confirm Deletion",
			"content_type": "Content Type",
			"convert": "Convert To Regular Repository",
			"convert_confirm": "Confirm Conversion",
			"convert_desc": "You can convert this mirror to a regular repository. This cannot be reversed.",
			"convert_notices_1": "- This operation will convert this repository mirror into a regular repository and cannot be undone.",
			"convert_succeed": "Repository has been converted to regular type successfully.",
			"danger_zone": "Danger Zone",
			"default_branch": "Default Branch",
			"default_branch_desc": "The default branch is considered the \"base\" branch for code commits, pull requests and online editing.",
			"delete": "Delete This Repository",
			"delete_collaborator": "Delete",
			"delete_desc": "Once you delete a repository, there is no going back. Please be certain.",
			"delete_notices_1": "- This operation <strong>CANNOT</strong> be undone.",
			"delete_notices_2": "- This operation will permanently delete the everything of this repository, including Git data, issues, comments and accesses of collaborators.",
			"delete_notices_fork_1": "- All forks will become independent after deletion.",
			"delete_webhook": "Delete Webhook",
			"deletion_success": "Repository has been deleted successfully!",
			"deploy_key_content": "Content",
			"deploy_key_deletion": "Delete Deploy Key",
			"deploy_key_deletion_desc": "Deleting this deploy key will remove all related accesses for this repository. Do you want to continue?",
			"deploy_key_deletion_success": "Deploy key has been deleted successfully!",
			"deploy_key_desc": "Deploy keys have read-only access. They are not the same as personal account SSH keys.",
			"deploy_keys": "Deploy Keys",
			"deploy_keys_helper": "<b>Common Gotcha!</b> If you're looking for adding personal public keys, please add them in your <a href=\"%s%s\">account settings</a>.",
			"event_choose": "Let me choose what I need.",
			"event_create": "Create",
			"event_create_desc": "Branch or tag created",
			"event_delete": "Delete",
			"event_delete_desc": "Branch or tag deleted",
			"event_desc": "When should this webhook be triggered?",
			"event_fork": "Fork",
			"event_fork_desc": "Repository forked",
			"event_issue_comment": "Issue Comment",
			"event_issue_comment_desc": "Issue comment created, edited, or deleted.",
			"event_issues": "Issues",
			"event_issues_desc": "Issue opened, closed, reopened, edited, assigned, unassigned, label updated, label cleared, milestoned, or demilestoned.",
			"event_pull_request": "Pull Request",
			"event_pull_request_desc": "Pull request opened, closed, reopened, edited, assigned, unassigned, label updated, label cleared, milestoned, demilestoned, or synchronized.",
			"event_push": "Push",
			"event_push_desc": "Git push to a repository",
			"event_push_only": "Just the <code>push</code> event.",
			"event_release": "Release",
			"event_release_desc": "Release published in a repository.",
			"event_send_everything": "I need <strong>everything</strong>.",
			"external_tracker_url": "External Issue Tracker URL",
			"external_tracker_url_desc": "Visitors will be redirected to URL when they click on the tab.",
			"external_wiki_url": "External Wiki URL",
			"external_wiki_url_desc": "Visitors will be redirected to URL when they click on the tab.",
			"githook_content": "Hook Content",
			"githook_edit_desc": "If the hook is inactive, sample content will be presented. Leaving content to an empty value will disable this hook.",
			"githook_name": "Hook Name",
			"githooks": "Git Hooks",
			"githooks_desc": "Git Hooks are powered by Git itself, you can edit files of supported hooks in the list below to perform custom operations.",
			"hook_type": "Hook Type",
			"hooks": "Webhooks",
			"hooks_desc": "Webhooks are much like basic HTTP POST event triggers. Whenever something occurs in Gogs, we will handle the notification to the target host you specify. Learn more in this <a target=\"_blank\" href=\"%s\">Webhooks Guide</a>.",
			"issues_desc": "Enable issue tracker",
			"key_been_used": "Deploy key content has been used.",
			"key_name_used": "Deploy key with the same name already exists.",
			"make_transfer": "Make Transfer",
			"mirror_settings": "Mirror Settings",
			"mirror_sync_in_progress": "Mirror syncing is in progress, please refresh page in about a minute.",
			"new_owner_has_same_repo": "The new owner already has a repository with same name. Please choose another name.",
			"no_deploy_keys": "You haven't added any deploy keys.",
			"options": "Options",
			"org_not_allowed_to_be_collaborator": "Organization is not allowed to be added as a collaborator.",
			"payload_url": "Payload URL",
			"protect_require_pull_request": "Require pull request instead direct pushing",
			"protect_require_pull_request_desc": "Enable this option to disable direct pushing to this branch. Commits have to be pushed to another non-protected branch and merged to this branch through pull request.",
			"protect_this_branch": "Protect this branch",
			"protect_this_branch_desc": "Disable force pushes and prevent from deletion.",
			"protect_whitelist_committers": "Whitelist who can push to this branch",
			"protect_whitelist_committers_desc": "Add people or teams to whitelist of direct push to this branch. Users in whitelist will bypass require pull request check.",
			"protect_whitelist_search_teams": "Search teams",
			"protect_whitelist_search_users": "Search users",
			"protect_whitelist_teams": "Teams for which members of them can push to this branch",
			"protect_whitelist_users": "Users who can push to this branch",
			"protected_branches": "Protected Branches",
			"protected_branches_desc": "Protect branches from force pushing, accidental deletion and whitelist code committers.",
			"pulls_desc": "Enable pull requests to accept public contributions",
			"recent_deliveries": "Recent Deliveries",
			"remove_collaborator_success": "Collaborator has been removed.",
			"search_user_placeholder": "Search user...",
			"secret": "Secret",
			"secret_desc": "Secret will be sent as SHA256 HMAC hex digest of payload via <code>X-Gogs-Signature</code> header.",
			"service": {
				"jenkins": {
					"description": "Jenkins CI",
					"file_type": "Config File Type",
					"gogs_token": "Gogs Token",
					"gogs_token_desc": "Gogs's token used to report job status by Jenkins",
					"host": "Jenkins Host",
					"jenkins_name": "Jenkins",
					"token": "Jenkins Token",
					"token_desc": "Jenkins's token used to create job, update job by Gogs",
					"user": "Jenkins User"
				}
			},
			"services": {
				"description": "Integration provided by Gogs to third-party systems",
				"services_name": "Services"
			},
			"settings_name": "Settings",
			"site": "Official Site",
			"slack_channel": "Channel",
			"slack_color": "Color",
			"slack_domain": "Domain",
			"slack_icon_url": "Icon URL",
			"slack_token": "Token",
			"slack_username": "Username",
			"sync_mirror": "Sync Now",
			"title": "Title",
			"tracker_issue_style": {
				"alphanumeric": "Alphanumeric",
				"numeric": "Numeric",
				"tracker_issue_style_name": "External Issue Tracker Naming Style:"
			},
			"tracker_url_format": "External Issue Tracker URL Format",
			"tracker_url_format_desc": "You can use placeholder <code>{user} {repo} {index}</code> for user name, repository name and issue index.",
			"transfer": "Transfer Ownership",
			"transfer_desc": "Transfer this repository to another user or to an organization in which you have admin rights.",
			"transfer_form_title": "Please enter following information to confirm your operation:",
			"transfer_notices_1": "- You will lose access if new owner is a individual user.",
			"transfer_notices_2": "- You will conserve access if new owner is an organization and if you're one of the owners.",
			"transfer_owner": "New Owner",
			"transfer_succeed": "Repository ownership has been transferred successfully.",
			"update": "Update",
			"update_default_branch_success": "Default branch of this repository has been updated successfully!",
			"update_default_branch_unsupported": "Change default branch is not supported by the Git version on server.",
			"update_githook": "Update Hook",
			"update_hook_success": "Webhook has been updated.",
			"update_protect_branch_success": "Protect options for this branch has been updated successfully!",
			"update_service": "Update Service",
			"update_settings": "Update Settings",
			"update_settings_success": "Repository options has been updated successfully.",
			"update_webhook": "Update Webhook",
			"use_external_issue_tracker": "Use external issue tracker",
			"use_external_wiki": "Use external wiki",
			"use_internal_issue_tracker": "Use builtin lightweight issue tracker",
			"use_internal_wiki": "Use builtin wiki",
			"webhook": {
				"body": "Body",
				"headers": "Headers",
				"payload": "Payload",
				"redelivery": "Redelivery",
				"redelivery_success": "Hook task '%s' has been readded to delivery queue. It may take few seconds to update delivery status in history.",
				"request": "Request",
				"response": "Response",
				"test_delivery": "Test Delivery",
				"test_delivery_desc": "Send a fake push event delivery to test your webhook settings",
				"test_delivery_success": "Test webhook has been added to delivery queue. It may take few seconds before it shows up in the delivery history."
			},
			"webhook_deletion": "Delete Webhook",
			"webhook_deletion_desc": "Delete this webhook will remove its information and all delivery history. Do you want to continue?",
			"webhook_deletion_success": "Webhook has been deleted successfully!",
			"wiki_delete": "Erase Wiki Data",
			"wiki_delete_desc": "Once you erase wiki data there is no going back. Please be certain.",
			"wiki_delete_notices_1": "- This will delete and disable the wiki for %s",
			"wiki_deletion_success": "Repository wiki data have been erased successfully.",
			"wiki_desc": "Enable wiki system"
		},
		"star": "Star",
		"stargazers": "Stargazers",
		"tags": "Tags",
		"tree": "Tree",
		"unstar": "Unstar",
		"unwatch": "Unwatch",
		"video_not_supported_in_browser": "Your browser doesn't support HTML5 video tag.",
		"visibility": "Visibility",
		"visiblity_fork_helper": "(Change of this value will affect all forks)",
		"visiblity_helper": "This repository is <span class=\"ui red text\">Private</span>",
		"visiblity_helper_forced": "Site admin has forced all new repositories to be <span class=\"ui red text\">Private</span>",
		"watch": "Watch",
		"watchers": "Watchers",
		"wiki": {
			"create_first_page": "Create the first page",
			"default_commit_message": "Write a note about this update (optional).",
			"delete_page_button": "Delete Page",
			"delete_page_notice_1": "This will delete the page <code>\"%s\"</code>. Please be certain.",
			"edit_page_button": "Edit",
			"filter_page": "Filter page",
			"last_commit_info": "%s edited this page %s",
			"last_updated": "Last updated %s",
			"new_page": "Create New Page",
			"new_page_button": "New Page",
			"page": "Page",
			"page_already_exists": "Wiki page with same name already exists.",
			"pages": "Pages",
			"save_page": "Save Page",
			"welcome": "Welcome to Wiki!",
			"welcome_desc": "Wiki is the place where you would like to document your project together and make it better.",
			"wiki_name": "Wiki"
		}
	}
}
